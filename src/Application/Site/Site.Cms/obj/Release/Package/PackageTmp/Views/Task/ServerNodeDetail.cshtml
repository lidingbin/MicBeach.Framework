
@{
    ViewBag.Title = "服务详情";
}
@using MicBeach.ViewModel.Task
@using MicBeach.CTask
@using MicBeach.Util.Extension
@using MicBeach.Util.Serialize
@model ServerNodeViewModel
@{
    var jobStates = JobState.运行中.GetType().GetEnumValueAndNames();
    var serverJobRunStates = JobServerState.停用.GetType().GetEnumValueAndNames();
}
<div id="pc-head">
    <div class="form-con" id="home">
        <div class="form-ingroup">
            <div class="fig-body">
                <table cellpadding="0" cellspacing="0" class="detail-table">
                    <tr>
                        <td class="detail-tit w-150">编号：</td>
                        <td class="w-250 detail-txt">@Model.Id</td>
                        <td class="detail-tit">名称：</td>
                        <td class="w-200 detail-txt">@Model.Name</td>
                        <td class="detail-tit">状态：</td>
                        <td class="detail-txt">@Model.State</td>
                    </tr>
                    <tr>
                        <td class="detail-tit">主机地址：</td>
                        <td class="w-250 detail-txt">@Model.Host</td>
                        <td class="detail-tit">说明：</td>
                        <td class="detail-txt" colspan="3">@Model.Description</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="pc-body">
    <div id="pc-body-inner">
        <div class="form_tabgroup c_pagecon">
            <ul class="nav nav-tabs c_head" role="tablist">
                <li role="presentation" class="active">
                    <a href="#goodsinfo" role="tab" data-toggle="tab" style="border-radius:0px;border-left:none !important">工作任务</a>
                </li>
                <li role="presentation">
                    <a href="#job_executelog" id="tab_link_exectlog" role="tab" data-toggle="tab">执行记录</a>
                </li>
                <li role="presentation">
                    <a href="#job_errorlog" id="tab_link_errorlog" role="tab" data-toggle="tab">错误日志</a>
                </li>
            </ul>
            <div class="form_tabgconent tab-content c_body">
                <div role="tabpanel" class="tab-pane active c_pagecon" id="goodsinfo">
                    <div class="panel-body pd-0 b-r-radnone b-l-radnone c_head">
                        <div class="panel-body pd-10">
                            <div class="lis_search">
                                <div class="input-group">
                                    <input type="text" class="form-control w-200" id="search_jobname" placeholder="任务名称/地址">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default fc_3" type="button" id="searchbusiness_btn" onclick="LoadJobs()"><i class="glyphicon glyphicon-search"></i></button>
                                    </span>
                                </div>

                                <button class="btn btn-success" type="button" id="btn_addjob"><i class="glyphicon glyphicon-plus"></i> 添加任务</button>
                                <button class="btn btn-danger" type="button" id="btn_delselectjob"><i class="glyphicon glyphicon-trash"></i> 移除选中</button>
                            </div>
                        </div>
                    </div>
                    <div class="c_body">
                        <table class="table table-striped table-bordered nowrap wp-100 bd-lw-0" id="job_table" cellpadding="0" cellspacing="0"></table>
                    </div>
                    <div class="c_foot bd-tw-1 bd-t-ddd bd-t-solid" id="job_tabe_pager"></div>
                </div>

                <div role="tabpanel" class="tab-pane active c_pagecon" id="job_executelog">
                    <div class="c_head">
                        <div class="lis_search pd-10">
                            <label class="stit">开始时间</label><span class="sctrol"><input type="text" id="search_execlogbegintime" placeholder="" readonly="readonly" class="form-control w-150 DateTime" />-<input type="text" id="search_execlogendtime" placeholder="" class="form-control w-150 DateTime" readonly="readonly" /></span>
                            <button class="btn btn-default fc_3" type="button" onclick="LoadExecLog()"><i class="glyphicon glyphicon-search"></i> 搜索</button>
                        </div>
                    </div>
                    <div class="c_body">
                        <table class="table table-striped table-bordered nowrap wp-100 bd-lw-0" id="exectlog_table" cellpadding="0" cellspacing="0"></table>
                    </div>
                    <div class="c_foot bd-tw-1 bd-t-ddd bd-t-solid" id="exectlog_tabe_pager"></div>
                </div>

                <div role="tabpanel" class="tab-pane active c_pagecon" id="job_errorlog">
                    <div class="c_head">
                        <div class="lis_search pd-10">
                            <label class="stit">开始时间</label><span class="sctrol"><input type="text" id="search_errorlogbegintime" placeholder="" readonly="readonly" class="form-control w-150 DateTime" />-<input type="text" id="search_errorlogendtime" placeholder="" class="form-control w-150 DateTime" readonly="readonly" /></span>
                            <button class="btn btn-default fc_3" type="button" onclick="LoadErrorLog()"><i class="glyphicon glyphicon-search"></i> 搜索</button>
                        </div>
                    </div>
                    <div class="c_body">
                        <table class="table table-striped table-bordered nowrap wp-100 bd-lw-0" id="errorlog_table" cellpadding="0" cellspacing="0">
                        </table>
                    </div>
                    <div class="c_foot bd-tw-1 bd-t-ddd bd-t-solid" id="errorlog_tabe_pager"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="pc-foot">
    <div class="txt-right form-submitbtn-con pdr-10">
        <button class="btn btn-blue" id="btn_edit"><i class="glyphicon glyphicon-edit"></i> 编辑</button>
        @if (Model.State == ServerState.运行)
        {
            <button class="btn btn-success" id="btn_disable"><i class="glyphicon glyphicon-eye-close"></i> 关闭</button>
        }
        else
        {
            <button class="btn btn-success" id="btn_enable"><i class="glyphicon glyphicon-eye-open"></i> 开启</button>
        }
        <button class="btn btn-danger" id="btn_delete"><i class="glyphicon glyphicon-trash"></i> 删除</button>
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/scripts/date")
    <script type="text/javascript">
        BodyScroll = false;
        HasDivPageCon=true;
        TabConentScroll=true;
        var loadedExecLog=false;
        var loadedErrorLog=false;
        var saveJobServerUrl = '@Url.Action("SaveJobServerHost","Task")';
        var loadJobUrl = '@Url.Action("GetJobServerHostByServer", "Task")';
        var jobStatesDic=new Object();
        var serverJobRunStatesDic=new Object();
        $(function () {
            jobStatesDic=JSON.parse('@Html.Raw(JsonSerialize.ObjectToJson(jobStates))');
            serverJobRunStatesDic=JSON.parse('@Html.Raw(JsonSerialize.ObjectToJson(serverJobRunStates))');
            //任务列表
            InitDataTable({
                TableEle:'#job_table',
                'columnDefs':[{ "title": '<input type="checkbox" class="cbx_all"/>', "targets": 0,"data":function ( row, type, val, meta ) {
                    return '<input type="checkbox" class="cbx_val" value="'+row.Job.Id+'"/>';
                },width:'20px',className:'txt-center' },
                { "title": "任务名称", "targets": 1,"data":'Job.Name',width:'150px' },
                { "title": "任务状态", "targets": 2,"data":'Job.State',width:'100px',className:'txt-center',render:function(data, type, row, meta){
                    return jobStatesDic[data];
                } },
                { "title": "调度状态", "targets": 3,"data":'RunState',width:'100px',className:'txt-center',render:function(data, type, row, meta){
                    if(serverJobRunStatesDic[data])
                    {
                        return serverJobRunStatesDic[data];
                    }
                    return '';
                } },
                //{ "title": "最近执行时间", "targets": 4,"data":'123',width:'130px',className:'txt-center',render:function(data, type, row, meta){
                //    return '2017-1-1';
                //} },
                //{ "title": "下次执行时间", "targets": 5,"data":'123',width:'130px',className:'txt-center',render:function(data, type, row, meta){
                //    return '2017-1-1';
                //} },
                { "title": "任务地址", "targets": 4,"data":'Job.JobPath' },
                {  "title": "操作", "targets": 5,"data":function(row,type,val,meta){
                    var menuItems=new Array();
                    switch(row.RunState){
                        case @((int)JobServerState.启用):
                            menuItems.push('<li><a href="javascript:void(0)" class="btn_jobdisable" jobno="_jobid" jobname="_jobname"><i class="glyphicon glyphicon-eye-close"></i> 停用</a></li>'.replace('_jobid',row.Job.Id).replace('_jobname',row.Job.Name));
                            break;
                        case @((int)JobServerState.停用):
                            menuItems.push('<li><a href="javascript:void(0)" class="btn_jobenable" jobno="_jobid" jobname="_jobname"><i class="glyphicon glyphicon-eye-open"></i> 启用</a></li>'.replace('_jobid',row.Job.Id).replace('_jobname',row.Job.Name));
                            break;
                    }
                    menuItems.push('<li><a href="javascript:void(0)" class="btn_jobtrigger" jobno="_jobid" jobname="_jobname"><i class="glyphicon glyphicon-time"></i> 计划</a></li>'.replace('_jobid',row.Job.Id).replace('_jobname',row.Job.Name));
                    menuItems.push('<li><a href="javascript:void(0)" class="btn_jobdelete" jobno="_jobid" jobname="_jobname"><i class="glyphicon glyphicon-trash"></i> 移除</a></li>'.replace('_jobid',row.Job.Id).replace('_jobname',row.Job.Name));
                    var menuString=menuItems.join('');
                    return '<div class="btn-group"><button type="button" class="btn btn-blue dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">管理 <span class="caret"></span></button><ul class="dropdown-menu list-dropdown-menu w-62">'+menuString+'</ul></div>';
                },width:'62px',className:'txt-center' }
                ]
            });
            //执行日志
            InitDataTable({
                TableEle:'#exectlog_table',
                fixedColumns:{
                    leftColumns:0,
                    rightColumns:0
                },
                'columnDefs':[
                { "title": "任务", "targets": 0,"data":'Job.Name',width:'150px' },
                { "title": "执行计划", "targets": 1,"data":'Trigger.Name',width:'200px'},
                { "title": "开始时间", "targets": 2,"data":'BeginTime',width:'130px',className:'txt-center',render:function(data, type, row, meta){
                    return  moment(data).format("YYYY-MM-DD HH:mm:ss");
                }},
                { "title": "结束时间", "targets": 3,"data":'EndTime',width:'130px',className:'txt-center',render:function(data, type, row, meta){
                    return  moment(data).format("YYYY-MM-DD HH:mm:ss");
                }},
                { "title": "说明", "targets": 4,"data":'Message'}
                ]
            });
            //错误日志
            InitDataTable({
                TableEle:'#errorlog_table',
                fixedColumns:{
                    leftColumns:0,
                },
                'columnDefs':[
                { "title": "任务", "targets": 0,"data":'Job.Name',width:'150px' },
                { "title": "时间", "targets": 1,"data":'Date',width:'130px',className:'txt-center',render:function(data, type, row, meta){
                    return  moment(data).format("YYYY-MM-DD HH:mm:ss");
                }},
                { "title": "错误消息", "targets": 2,"data":'Message'},
                                {  "title": "操作", "targets": 3,"data":function(row,type,val,meta){
                                    var menuItems=new Array();
                                    menuItems.push('<li><a href="javascript:void(0)" class="btn_errorlogdetail" errorno="'+row.Id+'"><i class="glyphicon glyphicon-list-alt"></i> 详情</a></li>');
                                    var menuString=menuItems.join('');
                                    return '<div class="btn-group"><button type="button" class="btn btn-blue dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">管理 <span class="caret"></span></button><ul class="dropdown-menu list-dropdown-menu w-62">'+menuString+'</ul></div>';
                                },width:'62px',className:'txt-center' }
                ]
            });
            //编辑
            $("#btn_edit").click(function () {
                window.top.RedirectCurrentPage('@Url.Action("EditServerNode", "Task",new { id=Model.Id})', '编辑服务【@Model.Name】');
            });
            //删除
            $("#btn_delete").click(function(){
                ConfirmMsg('删除服务后将停止和移除所有的任务调度信息,确认删除吗?', function () {
                    $.post('@Url.Action("DeleteServerNode","Task")', { ids: '@Model.Id' }, function (res) {
                        ResultMsg(res);
                        if (res.Success) {
                            window.top.CloseCurrentPage();
                        }
                    });
                });
            });
            //添加任务
            $("#btn_addjob").click(function () {
                SelectJob();
            });
            //停用任务
            $("body").on("click", ".btn_jobdisable", function () {
                var jobNo = $.trim($(this).attr("jobno"));
                if (jobNo == "") {
                    return;
                }
                var jobName = $.trim($(this).attr("jobname"));
                ModifyServerRunState(jobNo,jobName,@((int)JobServerState.停用));
            });
            //启用任务
            $("body").on("click", ".btn_jobenable", function () {
                var jobNo = $.trim($(this).attr("jobno"));
                if (jobNo == "") {
                    return;
                }
                var jobName = $.trim($(this).attr("jobname"));
                ModifyServerRunState(jobNo,jobName,@((int)JobServerState.启用));
            });
            //移除任务
            $("body").on("click",".btn_jobdelete",function(){
                var jobNo = $.trim($(this).attr("jobno"));
                if (jobNo == "") {
                    return;
                }
                var jobName = $.trim($(this).attr("jobname"));
                RemoveServerJob([jobNo],jobName);
            });
            //移除选中任务
            $("#btn_delselectjob").click(function(){
                var jobNos=GetDataTableCheckedValues('#job_table');
                RemoveServerJob(jobNos,'');
            });

            //查看任务调度计划
            $("body").on('click','.btn_jobtrigger',function(){
                var jobNo = $.trim($(this).attr("jobno"));
                if (jobNo == "") {
                    return;
                }
                var jobName = $.trim($(this).attr("jobname"));
                DialogPage({
                    url: '@Html.Raw(Url.Action("ServerScheduleTriggerList", "Task",new { serverCode =Model.Id, jobId="_jid"}))'.replace('_jid',jobNo),
                    width: "600px",
                    height: "400px",
                    title: '任务【'+jobName+'】的调度计划',
                    ok: false,
                    cancel: null
                });
            });

            //开启服务
            $("#btn_enable").click(function(){
                ModifyServiceRunState(true);
            });
            //关闭服务
            $("#btn_disable").click(function(){
                ModifyServiceRunState(false);
            });

            //执行日志标签
            $("body").on('click','#tab_link_exectlog',function(){
                if(!loadedExecLog){
                    LoadExecLog();
                }
            });

            //错误日志标签
            $("body").on('click','#tab_link_errorlog',function(){
                if(!loadedErrorLog){
                    LoadErrorLog();
                }
            });
            //错误日志详情
            $("body").on('click','.btn_errorlogdetail',function(){
                var errorNo=$.trim($(this).attr("errorno"));
                if(errorNo==""){
                    return;
                }
                DialogPage({
                    url: '@Html.Raw(Url.Action("ErrorLogDetail", "Task",new { id = "_eid" }))'.replace('_eid',errorNo),
                    width: "600px",
                    height: "400px",
                    title: '错误详情',
                    ok: false,
                    cancel: null
                });
            });

            //加载任务
            LoadJobs();
        });

        //修改服务运行状态
        function ModifyServiceRunState(enable){
            var tipMsg=enable?'服务启动后将开始调用服务上的任务,确认启动吗?':"服务关闭后将停止该服务上所有的工作任务,确认关闭吗?";
            var data={Id:'@Model.Id',State:(enable?'@((int)ServerState.运行)':'@((int)ServerState.关闭)')};
            ConfirmMsg(tipMsg, function () {
                $.post('@Url.Action("ModifyServiceRunState", "Task")', { service:data }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        window.top.RefreshCurrentPage();
                    }
                });
            });
        }

        //获取选中的任务
        function GetSelectJobs() {
            var checkedValues = new Array();
            $("#job_tabe_page_list .table_cbox").each(function (i, e) {
                if (e.checked) {
                    var nowValue = $.trim($(e).val());
                    if (nowValue != "") {
                        checkedValues.push(nowValue);
                    }
                }
            });
            return checkedValues;
        }

        //加载服务
        function LoadJobs() {
            var jobKey = $.trim($("#search_jobname").val());
            var serverIds = new Array();
            serverIds.push('@Model.Id');
            var data = {
                JobKey: jobKey,
                Servers: serverIds
            };
            PageSearch({
                url: loadJobUrl,
                data: data,
                listEle: "#job_table",
                pagerEle: "#job_tabe_pager",
                callback: function () {
                }
            });
        }

        //选择任务
        function SelectJob() {
            DialogPage({
                url: '@Url.Action("JobMultiSelect", "Task")',
                width: "600px",
                height: "400px",
                title: '选择任务',
                ok: false,
                cancel: null
            });
        }

        //选择任务
        function JobMultiSelectCallback(jobs) {
            if (!jobs || jobs.length <= 0) {
                return;
            }
            var serverHosts = new Array();
            for (var j in jobs) {
                var nowJob = jobs[j];
                serverHosts.push({
                    Server: {
                        Id: '@Model.Id'
                    },
                    Job: {
                        Id: nowJob.Id
                    }
                });
            }
            $.post(saveJobServerUrl, { serverHosts: serverHosts }, function (res) {
                ResultMsg(res);
                if (res.Success) {
                    LoadJobs();
                }
            });
        }

        //修改服务承载运行状态
        function ModifyServerRunState(jobId, jobName, state) {
            if (!jobId || jobId == "") {
                return;
            }
            var enableState=state==@((int)JobServerState.启用);
            var tipMsg = enableState?'启用后任务将会在该服务上调度执行,确认启动任务【'+jobName+'】吗?':'停用后任务将会在该服务上停止执行,确认停用任务【'+jobName+'】吗?';
            var jobServerHosts=new Array();
            jobServerHosts.push({
                Server:{
                    Id:'@Model.Id'
                },
                Job:{
                    Id:jobId
                },
                RunState:state
            });
            ConfirmMsg(tipMsg, function () {
                $.post('@Url.Action("ModifyJobServerHostRunState","Task")', { serverHosts: jobServerHosts }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        LoadJobs();
                    }
                });
            });
        }

        //移除承载任务
        function RemoveServerJob(jobIdArray,jobName){
            if(!jobIdArray||jobIdArray.length<=0){
                return;
            }
            var serverHosts=new Array();
            for(var j in jobIdArray)
            {
                serverHosts.push({
                    Server:{
                        Id:'@Model.Id'
                    },
                    Job:{
                        Id:jobIdArray[j]
                    }
                });
            }
            var tipMsg=jobIdArray.length==1&&jobName!=""?'移除后将停止任务在该服务上的执行,确认移除任务【'+jobName+'】吗?':"移除后将停止任务在该服务上的执行,确认移除吗?";
            ConfirmMsg(tipMsg, function () {
                $.post('@Url.Action("DeleteJobServerHost", "Task")', { serverHosts: serverHosts }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        LoadJobs();
                    }
                });
            });
        }

        //加载任务执行日志
        function LoadExecLog(){
            var beginTime=$.trim($("#search_execlogbegintime").val());
            var endTime=$.trim($("#search_execlogendtime").val());
            var data={
                Server:'@Model.Id',
                BeginTime:beginTime,
                EndTime:endTime
            };
            PageSearch({
                url: '@Url.Action("SearchServerExecuteLog", "Task")',
                data: data,
                listEle: "#exectlog_table",
                pagerEle: "#exectlog_tabe_pager",
                callback: function () {
                    loadedExecLog=true;
                }
            });
        }

        //加载任务错误日志
        function LoadErrorLog(){
            var beginTime=$.trim($("#search_errorlogbegintime").val());
            var endTime=$.trim($("#search_errorlogendtime").val());
            var data={
                Server:'@Model.Id',
                BeginDate:beginTime,
                EndDate:endTime
            };
            PageSearch({
                url: '@Url.Action("SearchServerErrorLog", "Task")',
                data: data,
                listEle: "#errorlog_table",
                pagerEle: "#errorlog_tabe_pager",
                callback: function () {
                    loadedErrorLog=true;
                }
            });
        }
    </script>
}
